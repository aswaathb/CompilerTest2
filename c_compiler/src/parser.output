Nonterminals useless in grammar

   DECLARATION_SEQ
   IDENTIFIER_LIST
   ITERATION_STATEMENT
   JUMP_STATEMENT
   PARAMETER_DECLARATOR
   PARAMETER_LIST
   TYPE_NAME
   TYPE_SPECIFIER
   UNARY_OPERATOR


Terminals unused in grammar

   F_CONST
   I_CONST
   C_CONST
   LOR
   LAND
   OR
   NEQUAL
   LESSEQUAL
   LESSTHAN
   GREATEQUAL
   GREATTHAN
   AND
   XOR
   L_SHIFT
   R_SHIFT
   MOD_ASS
   LL_ASS
   RR_ASS
   AND_ASS
   XOR_ASS
   OR_ASS
   ARROW
   DECR
   INCR
   CHAR
   SHORT
   LONG
   FLOAT
   DOUBLE
   SIGNED
   UNSIGNED
   CONST
   DO
   FOR
   SWITCH
   CONTINUE
   BREAK
   GOTO
   L_SQUARE
   R_SQUARE
   QUES_MARK
   COLON
   DOT
   SIZEOF
   CONDITIONAL_EXPRESSION
   LOGICAL_OR_EXPRESSION
   LOGICAL_AND_EXPRESSION
   INCLUSIVE_OR_EXPRESSION
   EXCLUSIVE_OR_EXPRESSION
   AND_EXPRESSION
   SHIFT_EXPRESSION
   PREFIX_EXPRESSION
   POSTFIX_EXPRESSION
   VARIABLE_CONSTANT


Rules useless in grammar

   49 DECLARATION_SEQ: DECLARATION
   50                | DECLARATION_SEQ DECLARATION

   51 IDENTIFIER_LIST: IDENTIFIER


State 75 conflicts: 1 shift/reduce


Grammar

    0 $accept: ROOT $end

    1 ROOT: TRANSLATION_UNIT

    2 TRANSLATION_UNIT: EXTERNAL_DECLARATION

    3 EXTERNAL_DECLARATION: DECLARATION
    4                     | DECLARATION_SPECIFIER DECLARATOR COMPOUND_STATEMENT

    5 STATEMENT: COMPOUND_STATEMENT
    6          | SELECTION_STATEMENT
    7          | WHILE L_BRAC EXPRESSION R_BRAC STATEMENT
    8          | RETURN EXPRESSION_STATEMENT
    9          | EXPRESSION_STATEMENT

   10 COMPOUND_STATEMENT: L_CURLY R_CURLY
   11                   | L_CURLY STATEMENT_LIST R_CURLY

   12 STATEMENT_LIST: STATEMENT
   13               | STATEMENT_LIST STATEMENT

   14 SELECTION_STATEMENT: IF L_BRAC EXPRESSION R_BRAC STATEMENT
   15                    | IF L_BRAC EXPRESSION R_BRAC STATEMENT ELSE STATEMENT

   16 EXPRESSION_STATEMENT: SEMICOLON
   17                     | EXPRESSION SEMICOLON

   18 EXPRESSION: ASSIGNMENT_EXPRESSION
   19           | EXPRESSION COMMA ASSIGNMENT_EXPRESSION

   20 ASSIGNMENT_EXPRESSION: EQUALITY_EXPRESSION
   21                      | PRIMARY_EXPRESSION ASSIGNMENT_OP ASSIGNMENT_EXPRESSION

   22 EQUALITY_EXPRESSION: ADDITIVE_EXPRESSION
   23                    | EQUALITY_EXPRESSION EQUAL RELATIONAL_EXPRESSION

   24 ADDITIVE_EXPRESSION: MULTIPLCATIVE_EXPRESSION
   25                    | ADDITIVE_EXPRESSION PLUS MULTIPLCATIVE_EXPRESSION
   26                    | ADDITIVE_EXPRESSION MINUS MULTIPLCATIVE_EXPRESSION

   27 MULTIPLCATIVE_EXPRESSION: CAST_EXPRESSION
   28                         | MULTIPLCATIVE_EXPRESSION TIMES PRIMARY_EXPRESSION
   29                         | MULTIPLCATIVE_EXPRESSION DIVIDE PRIMARY_EXPRESSION
   30                         | MULTIPLCATIVE_EXPRESSION MODULUS PRIMARY_EXPRESSION

   31 PRIMARY_EXPRESSION: IDENTIFIER
   32                   | STRING
   33                   | L_BRAC EXPRESSION R_BRAC

   34 ASSIGNMENT_OP: EQUAL
   35              | MUL_ASS
   36              | DIV_ASS
   37              | ADD_ASS
   38              | SUB_ASS

   39 DECLARATION: DECLARATION_SPECIFIER SEMICOLON
   40            | DECLARATION_SPECIFIER INIT_DECLARATOR_LIST SEMICOLON

   41 DECLARATION_SPECIFIER: VOID
   42                      | INT

   43 INIT_DECLARATOR_LIST: INIT_DECLARATOR

   44 INIT_DECLARATOR: DECLARATOR
   45                | DECLARATOR EQUAL INITIALIZER

   46 INITIALIZER: ASSIGNMENT_EXPRESSION

   47 DECLARATOR: DIRECT_DECLARATOR

   48 DIRECT_DECLARATOR: IDENTIFIER


Terminals, with rules where they appear

$end (0) 0
error (256)
IDENTIFIER (258) 31 48
F_CONST (259)
I_CONST (260)
C_CONST (261)
PLUS (262) 25
MINUS (263) 26
TIMES (264) 28
DIVIDE (265) 29
MODULUS (266) 30
LOR (267)
LAND (268)
OR (269)
NEQUAL (270)
LESSEQUAL (271)
LESSTHAN (272)
GREATEQUAL (273)
GREATTHAN (274)
AND (275)
XOR (276)
L_SHIFT (277)
R_SHIFT (278)
MUL_ASS (279) 35
DIV_ASS (280) 36
MOD_ASS (281)
ADD_ASS (282) 37
SUB_ASS (283) 38
LL_ASS (284)
RR_ASS (285)
AND_ASS (286)
XOR_ASS (287)
OR_ASS (288)
ARROW (289)
DECR (290)
INCR (291)
VOID (292) 41
CHAR (293)
SHORT (294)
INT (295) 42
LONG (296)
FLOAT (297)
DOUBLE (298)
SIGNED (299)
UNSIGNED (300)
CONST (301)
DO (302)
WHILE (303) 7
IF (304) 14 15
ELSE (305) 15
FOR (306)
SWITCH (307)
RETURN (308) 8
CONTINUE (309)
BREAK (310)
GOTO (311)
EQUAL (312) 23 34 45
SEMICOLON (313) 16 17 39 40
COMMA (314) 19
L_BRAC (315) 7 14 15 33
R_BRAC (316) 7 14 15 33
L_CURLY (317) 10 11
R_CURLY (318) 10 11
L_SQUARE (319)
R_SQUARE (320)
QUES_MARK (321)
COLON (322)
DOT (323)
STRING (324) 32
SIZEOF (325)
CONDITIONAL_EXPRESSION (326)
LOGICAL_OR_EXPRESSION (327)
LOGICAL_AND_EXPRESSION (328)
INCLUSIVE_OR_EXPRESSION (329)
EXCLUSIVE_OR_EXPRESSION (330)
AND_EXPRESSION (331)
RELATIONAL_EXPRESSION (332) 23
SHIFT_EXPRESSION (333)
CAST_EXPRESSION (334) 27
PREFIX_EXPRESSION (335)
POSTFIX_EXPRESSION (336)
VARIABLE_CONSTANT (337)


Nonterminals, with rules where they appear

$accept (83)
    on left: 0
ROOT (84)
    on left: 1, on right: 0
TRANSLATION_UNIT (85)
    on left: 2, on right: 1
EXTERNAL_DECLARATION (86)
    on left: 3 4, on right: 2
STATEMENT (87)
    on left: 5 6 7 8 9, on right: 7 12 13 14 15
COMPOUND_STATEMENT (88)
    on left: 10 11, on right: 4 5
STATEMENT_LIST (89)
    on left: 12 13, on right: 11 13
SELECTION_STATEMENT (90)
    on left: 14 15, on right: 6
EXPRESSION_STATEMENT (91)
    on left: 16 17, on right: 8 9
EXPRESSION (92)
    on left: 18 19, on right: 7 14 15 17 19 33
ASSIGNMENT_EXPRESSION (93)
    on left: 20 21, on right: 18 19 21 46
EQUALITY_EXPRESSION (94)
    on left: 22 23, on right: 20 23
ADDITIVE_EXPRESSION (95)
    on left: 24 25 26, on right: 22 25 26
MULTIPLCATIVE_EXPRESSION (96)
    on left: 27 28 29 30, on right: 24 25 26 28 29 30
PRIMARY_EXPRESSION (97)
    on left: 31 32 33, on right: 21 28 29 30
ASSIGNMENT_OP (98)
    on left: 34 35 36 37 38, on right: 21
DECLARATION (99)
    on left: 39 40, on right: 3
DECLARATION_SPECIFIER (100)
    on left: 41 42, on right: 4 39 40
INIT_DECLARATOR_LIST (101)
    on left: 43, on right: 40
INIT_DECLARATOR (102)
    on left: 44 45, on right: 43
INITIALIZER (103)
    on left: 46, on right: 45
DECLARATOR (104)
    on left: 47, on right: 4 44 45
DIRECT_DECLARATOR (105)
    on left: 48, on right: 47


State 0

    0 $accept: . ROOT $end

    VOID  shift, and go to state 1
    INT   shift, and go to state 2

    ROOT                   go to state 3
    TRANSLATION_UNIT       go to state 4
    EXTERNAL_DECLARATION   go to state 5
    DECLARATION            go to state 6
    DECLARATION_SPECIFIER  go to state 7


State 1

   41 DECLARATION_SPECIFIER: VOID .

    $default  reduce using rule 41 (DECLARATION_SPECIFIER)


State 2

   42 DECLARATION_SPECIFIER: INT .

    $default  reduce using rule 42 (DECLARATION_SPECIFIER)


State 3

    0 $accept: ROOT . $end

    $end  shift, and go to state 8


State 4

    1 ROOT: TRANSLATION_UNIT .

    $default  reduce using rule 1 (ROOT)


State 5

    2 TRANSLATION_UNIT: EXTERNAL_DECLARATION .

    $default  reduce using rule 2 (TRANSLATION_UNIT)


State 6

    3 EXTERNAL_DECLARATION: DECLARATION .

    $default  reduce using rule 3 (EXTERNAL_DECLARATION)


State 7

    4 EXTERNAL_DECLARATION: DECLARATION_SPECIFIER . DECLARATOR COMPOUND_STATEMENT
   39 DECLARATION: DECLARATION_SPECIFIER . SEMICOLON
   40            | DECLARATION_SPECIFIER . INIT_DECLARATOR_LIST SEMICOLON

    IDENTIFIER  shift, and go to state 9
    SEMICOLON   shift, and go to state 10

    INIT_DECLARATOR_LIST  go to state 11
    INIT_DECLARATOR       go to state 12
    DECLARATOR            go to state 13
    DIRECT_DECLARATOR     go to state 14


State 8

    0 $accept: ROOT $end .

    $default  accept


State 9

   48 DIRECT_DECLARATOR: IDENTIFIER .

    $default  reduce using rule 48 (DIRECT_DECLARATOR)


State 10

   39 DECLARATION: DECLARATION_SPECIFIER SEMICOLON .

    $default  reduce using rule 39 (DECLARATION)


State 11

   40 DECLARATION: DECLARATION_SPECIFIER INIT_DECLARATOR_LIST . SEMICOLON

    SEMICOLON  shift, and go to state 15


State 12

   43 INIT_DECLARATOR_LIST: INIT_DECLARATOR .

    $default  reduce using rule 43 (INIT_DECLARATOR_LIST)


State 13

    4 EXTERNAL_DECLARATION: DECLARATION_SPECIFIER DECLARATOR . COMPOUND_STATEMENT
   44 INIT_DECLARATOR: DECLARATOR .
   45                | DECLARATOR . EQUAL INITIALIZER

    EQUAL    shift, and go to state 16
    L_CURLY  shift, and go to state 17

    $default  reduce using rule 44 (INIT_DECLARATOR)

    COMPOUND_STATEMENT  go to state 18


State 14

   47 DECLARATOR: DIRECT_DECLARATOR .

    $default  reduce using rule 47 (DECLARATOR)


State 15

   40 DECLARATION: DECLARATION_SPECIFIER INIT_DECLARATOR_LIST SEMICOLON .

    $default  reduce using rule 40 (DECLARATION)


State 16

   45 INIT_DECLARATOR: DECLARATOR EQUAL . INITIALIZER

    IDENTIFIER       shift, and go to state 19
    L_BRAC           shift, and go to state 20
    STRING           shift, and go to state 21
    CAST_EXPRESSION  shift, and go to state 22

    ASSIGNMENT_EXPRESSION     go to state 23
    EQUALITY_EXPRESSION       go to state 24
    ADDITIVE_EXPRESSION       go to state 25
    MULTIPLCATIVE_EXPRESSION  go to state 26
    PRIMARY_EXPRESSION        go to state 27
    INITIALIZER               go to state 28


State 17

   10 COMPOUND_STATEMENT: L_CURLY . R_CURLY
   11                   | L_CURLY . STATEMENT_LIST R_CURLY

    IDENTIFIER       shift, and go to state 19
    WHILE            shift, and go to state 29
    IF               shift, and go to state 30
    RETURN           shift, and go to state 31
    SEMICOLON        shift, and go to state 32
    L_BRAC           shift, and go to state 20
    L_CURLY          shift, and go to state 17
    R_CURLY          shift, and go to state 33
    STRING           shift, and go to state 21
    CAST_EXPRESSION  shift, and go to state 22

    STATEMENT                 go to state 34
    COMPOUND_STATEMENT        go to state 35
    STATEMENT_LIST            go to state 36
    SELECTION_STATEMENT       go to state 37
    EXPRESSION_STATEMENT      go to state 38
    EXPRESSION                go to state 39
    ASSIGNMENT_EXPRESSION     go to state 40
    EQUALITY_EXPRESSION       go to state 24
    ADDITIVE_EXPRESSION       go to state 25
    MULTIPLCATIVE_EXPRESSION  go to state 26
    PRIMARY_EXPRESSION        go to state 27


State 18

    4 EXTERNAL_DECLARATION: DECLARATION_SPECIFIER DECLARATOR COMPOUND_STATEMENT .

    $default  reduce using rule 4 (EXTERNAL_DECLARATION)


State 19

   31 PRIMARY_EXPRESSION: IDENTIFIER .

    $default  reduce using rule 31 (PRIMARY_EXPRESSION)


State 20

   33 PRIMARY_EXPRESSION: L_BRAC . EXPRESSION R_BRAC

    IDENTIFIER       shift, and go to state 19
    L_BRAC           shift, and go to state 20
    STRING           shift, and go to state 21
    CAST_EXPRESSION  shift, and go to state 22

    EXPRESSION                go to state 41
    ASSIGNMENT_EXPRESSION     go to state 40
    EQUALITY_EXPRESSION       go to state 24
    ADDITIVE_EXPRESSION       go to state 25
    MULTIPLCATIVE_EXPRESSION  go to state 26
    PRIMARY_EXPRESSION        go to state 27


State 21

   32 PRIMARY_EXPRESSION: STRING .

    $default  reduce using rule 32 (PRIMARY_EXPRESSION)


State 22

   27 MULTIPLCATIVE_EXPRESSION: CAST_EXPRESSION .

    $default  reduce using rule 27 (MULTIPLCATIVE_EXPRESSION)


State 23

   46 INITIALIZER: ASSIGNMENT_EXPRESSION .

    $default  reduce using rule 46 (INITIALIZER)


State 24

   20 ASSIGNMENT_EXPRESSION: EQUALITY_EXPRESSION .
   23 EQUALITY_EXPRESSION: EQUALITY_EXPRESSION . EQUAL RELATIONAL_EXPRESSION

    EQUAL  shift, and go to state 42

    $default  reduce using rule 20 (ASSIGNMENT_EXPRESSION)


State 25

   22 EQUALITY_EXPRESSION: ADDITIVE_EXPRESSION .
   25 ADDITIVE_EXPRESSION: ADDITIVE_EXPRESSION . PLUS MULTIPLCATIVE_EXPRESSION
   26                    | ADDITIVE_EXPRESSION . MINUS MULTIPLCATIVE_EXPRESSION

    PLUS   shift, and go to state 43
    MINUS  shift, and go to state 44

    $default  reduce using rule 22 (EQUALITY_EXPRESSION)


State 26

   24 ADDITIVE_EXPRESSION: MULTIPLCATIVE_EXPRESSION .
   28 MULTIPLCATIVE_EXPRESSION: MULTIPLCATIVE_EXPRESSION . TIMES PRIMARY_EXPRESSION
   29                         | MULTIPLCATIVE_EXPRESSION . DIVIDE PRIMARY_EXPRESSION
   30                         | MULTIPLCATIVE_EXPRESSION . MODULUS PRIMARY_EXPRESSION

    TIMES    shift, and go to state 45
    DIVIDE   shift, and go to state 46
    MODULUS  shift, and go to state 47

    $default  reduce using rule 24 (ADDITIVE_EXPRESSION)


State 27

   21 ASSIGNMENT_EXPRESSION: PRIMARY_EXPRESSION . ASSIGNMENT_OP ASSIGNMENT_EXPRESSION

    MUL_ASS  shift, and go to state 48
    DIV_ASS  shift, and go to state 49
    ADD_ASS  shift, and go to state 50
    SUB_ASS  shift, and go to state 51
    EQUAL    shift, and go to state 52

    ASSIGNMENT_OP  go to state 53


State 28

   45 INIT_DECLARATOR: DECLARATOR EQUAL INITIALIZER .

    $default  reduce using rule 45 (INIT_DECLARATOR)


State 29

    7 STATEMENT: WHILE . L_BRAC EXPRESSION R_BRAC STATEMENT

    L_BRAC  shift, and go to state 54


State 30

   14 SELECTION_STATEMENT: IF . L_BRAC EXPRESSION R_BRAC STATEMENT
   15                    | IF . L_BRAC EXPRESSION R_BRAC STATEMENT ELSE STATEMENT

    L_BRAC  shift, and go to state 55


State 31

    8 STATEMENT: RETURN . EXPRESSION_STATEMENT

    IDENTIFIER       shift, and go to state 19
    SEMICOLON        shift, and go to state 32
    L_BRAC           shift, and go to state 20
    STRING           shift, and go to state 21
    CAST_EXPRESSION  shift, and go to state 22

    EXPRESSION_STATEMENT      go to state 56
    EXPRESSION                go to state 39
    ASSIGNMENT_EXPRESSION     go to state 40
    EQUALITY_EXPRESSION       go to state 24
    ADDITIVE_EXPRESSION       go to state 25
    MULTIPLCATIVE_EXPRESSION  go to state 26
    PRIMARY_EXPRESSION        go to state 27


State 32

   16 EXPRESSION_STATEMENT: SEMICOLON .

    $default  reduce using rule 16 (EXPRESSION_STATEMENT)


State 33

   10 COMPOUND_STATEMENT: L_CURLY R_CURLY .

    $default  reduce using rule 10 (COMPOUND_STATEMENT)


State 34

   12 STATEMENT_LIST: STATEMENT .

    $default  reduce using rule 12 (STATEMENT_LIST)


State 35

    5 STATEMENT: COMPOUND_STATEMENT .

    $default  reduce using rule 5 (STATEMENT)


State 36

   11 COMPOUND_STATEMENT: L_CURLY STATEMENT_LIST . R_CURLY
   13 STATEMENT_LIST: STATEMENT_LIST . STATEMENT

    IDENTIFIER       shift, and go to state 19
    WHILE            shift, and go to state 29
    IF               shift, and go to state 30
    RETURN           shift, and go to state 31
    SEMICOLON        shift, and go to state 32
    L_BRAC           shift, and go to state 20
    L_CURLY          shift, and go to state 17
    R_CURLY          shift, and go to state 57
    STRING           shift, and go to state 21
    CAST_EXPRESSION  shift, and go to state 22

    STATEMENT                 go to state 58
    COMPOUND_STATEMENT        go to state 35
    SELECTION_STATEMENT       go to state 37
    EXPRESSION_STATEMENT      go to state 38
    EXPRESSION                go to state 39
    ASSIGNMENT_EXPRESSION     go to state 40
    EQUALITY_EXPRESSION       go to state 24
    ADDITIVE_EXPRESSION       go to state 25
    MULTIPLCATIVE_EXPRESSION  go to state 26
    PRIMARY_EXPRESSION        go to state 27


State 37

    6 STATEMENT: SELECTION_STATEMENT .

    $default  reduce using rule 6 (STATEMENT)


State 38

    9 STATEMENT: EXPRESSION_STATEMENT .

    $default  reduce using rule 9 (STATEMENT)


State 39

   17 EXPRESSION_STATEMENT: EXPRESSION . SEMICOLON
   19 EXPRESSION: EXPRESSION . COMMA ASSIGNMENT_EXPRESSION

    SEMICOLON  shift, and go to state 59
    COMMA      shift, and go to state 60


State 40

   18 EXPRESSION: ASSIGNMENT_EXPRESSION .

    $default  reduce using rule 18 (EXPRESSION)


State 41

   19 EXPRESSION: EXPRESSION . COMMA ASSIGNMENT_EXPRESSION
   33 PRIMARY_EXPRESSION: L_BRAC EXPRESSION . R_BRAC

    COMMA   shift, and go to state 60
    R_BRAC  shift, and go to state 61


State 42

   23 EQUALITY_EXPRESSION: EQUALITY_EXPRESSION EQUAL . RELATIONAL_EXPRESSION

    RELATIONAL_EXPRESSION  shift, and go to state 62


State 43

   25 ADDITIVE_EXPRESSION: ADDITIVE_EXPRESSION PLUS . MULTIPLCATIVE_EXPRESSION

    CAST_EXPRESSION  shift, and go to state 22

    MULTIPLCATIVE_EXPRESSION  go to state 63


State 44

   26 ADDITIVE_EXPRESSION: ADDITIVE_EXPRESSION MINUS . MULTIPLCATIVE_EXPRESSION

    CAST_EXPRESSION  shift, and go to state 22

    MULTIPLCATIVE_EXPRESSION  go to state 64


State 45

   28 MULTIPLCATIVE_EXPRESSION: MULTIPLCATIVE_EXPRESSION TIMES . PRIMARY_EXPRESSION

    IDENTIFIER  shift, and go to state 19
    L_BRAC      shift, and go to state 20
    STRING      shift, and go to state 21

    PRIMARY_EXPRESSION  go to state 65


State 46

   29 MULTIPLCATIVE_EXPRESSION: MULTIPLCATIVE_EXPRESSION DIVIDE . PRIMARY_EXPRESSION

    IDENTIFIER  shift, and go to state 19
    L_BRAC      shift, and go to state 20
    STRING      shift, and go to state 21

    PRIMARY_EXPRESSION  go to state 66


State 47

   30 MULTIPLCATIVE_EXPRESSION: MULTIPLCATIVE_EXPRESSION MODULUS . PRIMARY_EXPRESSION

    IDENTIFIER  shift, and go to state 19
    L_BRAC      shift, and go to state 20
    STRING      shift, and go to state 21

    PRIMARY_EXPRESSION  go to state 67


State 48

   35 ASSIGNMENT_OP: MUL_ASS .

    $default  reduce using rule 35 (ASSIGNMENT_OP)


State 49

   36 ASSIGNMENT_OP: DIV_ASS .

    $default  reduce using rule 36 (ASSIGNMENT_OP)


State 50

   37 ASSIGNMENT_OP: ADD_ASS .

    $default  reduce using rule 37 (ASSIGNMENT_OP)


State 51

   38 ASSIGNMENT_OP: SUB_ASS .

    $default  reduce using rule 38 (ASSIGNMENT_OP)


State 52

   34 ASSIGNMENT_OP: EQUAL .

    $default  reduce using rule 34 (ASSIGNMENT_OP)


State 53

   21 ASSIGNMENT_EXPRESSION: PRIMARY_EXPRESSION ASSIGNMENT_OP . ASSIGNMENT_EXPRESSION

    IDENTIFIER       shift, and go to state 19
    L_BRAC           shift, and go to state 20
    STRING           shift, and go to state 21
    CAST_EXPRESSION  shift, and go to state 22

    ASSIGNMENT_EXPRESSION     go to state 68
    EQUALITY_EXPRESSION       go to state 24
    ADDITIVE_EXPRESSION       go to state 25
    MULTIPLCATIVE_EXPRESSION  go to state 26
    PRIMARY_EXPRESSION        go to state 27


State 54

    7 STATEMENT: WHILE L_BRAC . EXPRESSION R_BRAC STATEMENT

    IDENTIFIER       shift, and go to state 19
    L_BRAC           shift, and go to state 20
    STRING           shift, and go to state 21
    CAST_EXPRESSION  shift, and go to state 22

    EXPRESSION                go to state 69
    ASSIGNMENT_EXPRESSION     go to state 40
    EQUALITY_EXPRESSION       go to state 24
    ADDITIVE_EXPRESSION       go to state 25
    MULTIPLCATIVE_EXPRESSION  go to state 26
    PRIMARY_EXPRESSION        go to state 27


State 55

   14 SELECTION_STATEMENT: IF L_BRAC . EXPRESSION R_BRAC STATEMENT
   15                    | IF L_BRAC . EXPRESSION R_BRAC STATEMENT ELSE STATEMENT

    IDENTIFIER       shift, and go to state 19
    L_BRAC           shift, and go to state 20
    STRING           shift, and go to state 21
    CAST_EXPRESSION  shift, and go to state 22

    EXPRESSION                go to state 70
    ASSIGNMENT_EXPRESSION     go to state 40
    EQUALITY_EXPRESSION       go to state 24
    ADDITIVE_EXPRESSION       go to state 25
    MULTIPLCATIVE_EXPRESSION  go to state 26
    PRIMARY_EXPRESSION        go to state 27


State 56

    8 STATEMENT: RETURN EXPRESSION_STATEMENT .

    $default  reduce using rule 8 (STATEMENT)


State 57

   11 COMPOUND_STATEMENT: L_CURLY STATEMENT_LIST R_CURLY .

    $default  reduce using rule 11 (COMPOUND_STATEMENT)


State 58

   13 STATEMENT_LIST: STATEMENT_LIST STATEMENT .

    $default  reduce using rule 13 (STATEMENT_LIST)


State 59

   17 EXPRESSION_STATEMENT: EXPRESSION SEMICOLON .

    $default  reduce using rule 17 (EXPRESSION_STATEMENT)


State 60

   19 EXPRESSION: EXPRESSION COMMA . ASSIGNMENT_EXPRESSION

    IDENTIFIER       shift, and go to state 19
    L_BRAC           shift, and go to state 20
    STRING           shift, and go to state 21
    CAST_EXPRESSION  shift, and go to state 22

    ASSIGNMENT_EXPRESSION     go to state 71
    EQUALITY_EXPRESSION       go to state 24
    ADDITIVE_EXPRESSION       go to state 25
    MULTIPLCATIVE_EXPRESSION  go to state 26
    PRIMARY_EXPRESSION        go to state 27


State 61

   33 PRIMARY_EXPRESSION: L_BRAC EXPRESSION R_BRAC .

    $default  reduce using rule 33 (PRIMARY_EXPRESSION)


State 62

   23 EQUALITY_EXPRESSION: EQUALITY_EXPRESSION EQUAL RELATIONAL_EXPRESSION .

    $default  reduce using rule 23 (EQUALITY_EXPRESSION)


State 63

   25 ADDITIVE_EXPRESSION: ADDITIVE_EXPRESSION PLUS MULTIPLCATIVE_EXPRESSION .
   28 MULTIPLCATIVE_EXPRESSION: MULTIPLCATIVE_EXPRESSION . TIMES PRIMARY_EXPRESSION
   29                         | MULTIPLCATIVE_EXPRESSION . DIVIDE PRIMARY_EXPRESSION
   30                         | MULTIPLCATIVE_EXPRESSION . MODULUS PRIMARY_EXPRESSION

    TIMES    shift, and go to state 45
    DIVIDE   shift, and go to state 46
    MODULUS  shift, and go to state 47

    $default  reduce using rule 25 (ADDITIVE_EXPRESSION)


State 64

   26 ADDITIVE_EXPRESSION: ADDITIVE_EXPRESSION MINUS MULTIPLCATIVE_EXPRESSION .
   28 MULTIPLCATIVE_EXPRESSION: MULTIPLCATIVE_EXPRESSION . TIMES PRIMARY_EXPRESSION
   29                         | MULTIPLCATIVE_EXPRESSION . DIVIDE PRIMARY_EXPRESSION
   30                         | MULTIPLCATIVE_EXPRESSION . MODULUS PRIMARY_EXPRESSION

    TIMES    shift, and go to state 45
    DIVIDE   shift, and go to state 46
    MODULUS  shift, and go to state 47

    $default  reduce using rule 26 (ADDITIVE_EXPRESSION)


State 65

   28 MULTIPLCATIVE_EXPRESSION: MULTIPLCATIVE_EXPRESSION TIMES PRIMARY_EXPRESSION .

    $default  reduce using rule 28 (MULTIPLCATIVE_EXPRESSION)


State 66

   29 MULTIPLCATIVE_EXPRESSION: MULTIPLCATIVE_EXPRESSION DIVIDE PRIMARY_EXPRESSION .

    $default  reduce using rule 29 (MULTIPLCATIVE_EXPRESSION)


State 67

   30 MULTIPLCATIVE_EXPRESSION: MULTIPLCATIVE_EXPRESSION MODULUS PRIMARY_EXPRESSION .

    $default  reduce using rule 30 (MULTIPLCATIVE_EXPRESSION)


State 68

   21 ASSIGNMENT_EXPRESSION: PRIMARY_EXPRESSION ASSIGNMENT_OP ASSIGNMENT_EXPRESSION .

    $default  reduce using rule 21 (ASSIGNMENT_EXPRESSION)


State 69

    7 STATEMENT: WHILE L_BRAC EXPRESSION . R_BRAC STATEMENT
   19 EXPRESSION: EXPRESSION . COMMA ASSIGNMENT_EXPRESSION

    COMMA   shift, and go to state 60
    R_BRAC  shift, and go to state 72


State 70

   14 SELECTION_STATEMENT: IF L_BRAC EXPRESSION . R_BRAC STATEMENT
   15                    | IF L_BRAC EXPRESSION . R_BRAC STATEMENT ELSE STATEMENT
   19 EXPRESSION: EXPRESSION . COMMA ASSIGNMENT_EXPRESSION

    COMMA   shift, and go to state 60
    R_BRAC  shift, and go to state 73


State 71

   19 EXPRESSION: EXPRESSION COMMA ASSIGNMENT_EXPRESSION .

    $default  reduce using rule 19 (EXPRESSION)


State 72

    7 STATEMENT: WHILE L_BRAC EXPRESSION R_BRAC . STATEMENT

    IDENTIFIER       shift, and go to state 19
    WHILE            shift, and go to state 29
    IF               shift, and go to state 30
    RETURN           shift, and go to state 31
    SEMICOLON        shift, and go to state 32
    L_BRAC           shift, and go to state 20
    L_CURLY          shift, and go to state 17
    STRING           shift, and go to state 21
    CAST_EXPRESSION  shift, and go to state 22

    STATEMENT                 go to state 74
    COMPOUND_STATEMENT        go to state 35
    SELECTION_STATEMENT       go to state 37
    EXPRESSION_STATEMENT      go to state 38
    EXPRESSION                go to state 39
    ASSIGNMENT_EXPRESSION     go to state 40
    EQUALITY_EXPRESSION       go to state 24
    ADDITIVE_EXPRESSION       go to state 25
    MULTIPLCATIVE_EXPRESSION  go to state 26
    PRIMARY_EXPRESSION        go to state 27


State 73

   14 SELECTION_STATEMENT: IF L_BRAC EXPRESSION R_BRAC . STATEMENT
   15                    | IF L_BRAC EXPRESSION R_BRAC . STATEMENT ELSE STATEMENT

    IDENTIFIER       shift, and go to state 19
    WHILE            shift, and go to state 29
    IF               shift, and go to state 30
    RETURN           shift, and go to state 31
    SEMICOLON        shift, and go to state 32
    L_BRAC           shift, and go to state 20
    L_CURLY          shift, and go to state 17
    STRING           shift, and go to state 21
    CAST_EXPRESSION  shift, and go to state 22

    STATEMENT                 go to state 75
    COMPOUND_STATEMENT        go to state 35
    SELECTION_STATEMENT       go to state 37
    EXPRESSION_STATEMENT      go to state 38
    EXPRESSION                go to state 39
    ASSIGNMENT_EXPRESSION     go to state 40
    EQUALITY_EXPRESSION       go to state 24
    ADDITIVE_EXPRESSION       go to state 25
    MULTIPLCATIVE_EXPRESSION  go to state 26
    PRIMARY_EXPRESSION        go to state 27


State 74

    7 STATEMENT: WHILE L_BRAC EXPRESSION R_BRAC STATEMENT .

    $default  reduce using rule 7 (STATEMENT)


State 75

   14 SELECTION_STATEMENT: IF L_BRAC EXPRESSION R_BRAC STATEMENT .
   15                    | IF L_BRAC EXPRESSION R_BRAC STATEMENT . ELSE STATEMENT

    ELSE  shift, and go to state 76

    ELSE      [reduce using rule 14 (SELECTION_STATEMENT)]
    $default  reduce using rule 14 (SELECTION_STATEMENT)


State 76

   15 SELECTION_STATEMENT: IF L_BRAC EXPRESSION R_BRAC STATEMENT ELSE . STATEMENT

    IDENTIFIER       shift, and go to state 19
    WHILE            shift, and go to state 29
    IF               shift, and go to state 30
    RETURN           shift, and go to state 31
    SEMICOLON        shift, and go to state 32
    L_BRAC           shift, and go to state 20
    L_CURLY          shift, and go to state 17
    STRING           shift, and go to state 21
    CAST_EXPRESSION  shift, and go to state 22

    STATEMENT                 go to state 77
    COMPOUND_STATEMENT        go to state 35
    SELECTION_STATEMENT       go to state 37
    EXPRESSION_STATEMENT      go to state 38
    EXPRESSION                go to state 39
    ASSIGNMENT_EXPRESSION     go to state 40
    EQUALITY_EXPRESSION       go to state 24
    ADDITIVE_EXPRESSION       go to state 25
    MULTIPLCATIVE_EXPRESSION  go to state 26
    PRIMARY_EXPRESSION        go to state 27


State 77

   15 SELECTION_STATEMENT: IF L_BRAC EXPRESSION R_BRAC STATEMENT ELSE STATEMENT .

    $default  reduce using rule 15 (SELECTION_STATEMENT)
